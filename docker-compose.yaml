volumes:
  fur-mongo-data:
    external: true
  fur-node-modules:
    external: true
services:
  mongo:
    image: mongo:6
    volumes:
      - ./setup/mongodb:/docker-entrypoint-initdb.d
      - fur-mongo-data:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
  # mongo-express:
  #   build:
  #     context: setup/mongo-express
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_SERVER: mongo
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: admin
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: admin
  #     WAIT_HOSTS: mongo:27017
  #     WAIT_BEFORE: 5
  #     WAIT_TIMEOUT: 60
  api:
    build:
      context: api
      dockerfile: Dockerfile.dev
    volumes:
      - ./api:/app
    ports:
      - 8000:8000
    environment:
      MONGO_URL: mongodb://admin:admin@mongo/admin
      SIGNING_KEY: 87fe4a3fcfb60092dbaeb854a196bc3d9b190aed7930c734749e85245de698420c25f8e6899c421b4494e99459e01058de5daa9d49584cd62ec975da9aea33da
      WAIT_HOSTS: mongo:27017
      WAIT_BEFORE: 5
      WAIT_TIMEOUT: 60
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_SERVER_PUBLIC_KEY: ${AWS_SERVER_PUBLIC_KEY}
      AWS_SERVER_SECRET_KEY: ${AWS_SERVER_SECRET_KEY}
      AWS_HOST: https://ffr-development.s3.us-east-2.amazonaws.com/
  # ghi:
  #   image: node:lts-bullseye
  #   command: /bin/bash run.sh
  #   working_dir: /app
  #   volumes:
  #     - ./ghi:/app
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     HOST_OS: ${OS}
  #     NODE_ENV: development
  #     HOST: "0.0.0.0"
  #     REACT_APP_API_HOST: http://localhost:8000
  ghi:
    build:
      context: ghi
      dockerfile: Dockerfile.dev
    volumes:
      - fur-node-modules:/app/node_modules
      - ./ghi:/app
    ports:
      - 3000:3000
    environment:
      REACT_APP_API_HOST: http://localhost:8000
      REACT_APP_WS_HOST: ws://localhost:8000
      WAIT_HOSTS: api:8000
      WAIT_BEFORE: 5
      WAIT_TIMEOUT: 60
